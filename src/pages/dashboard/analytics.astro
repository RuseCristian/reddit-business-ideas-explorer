---
import Main from "../../layouts/Main.astro";
import SkeletonPanel from "../../components/SkeletonPanel.astro";
import AnalyticsLoader from "../../components/AnalyticsLoader.tsx";
---

<Main>
	<div class="dashboard-content" slot="content">
		<div class="panels-grid" id="analytics-skeleton">
			<!-- Skeleton Panels - shown while loading -->
			<SkeletonPanel variant="featured" hasMetric={true} hasBadges={true} />
			<SkeletonPanel hasProgress={true} />
			<SkeletonPanel variant="compact" hasMetric={true} />
			<SkeletonPanel />
			<SkeletonPanel variant="compact" />
			<SkeletonPanel hasBadges={true} />
			<SkeletonPanel variant="compact" hasMetric={true} />
			<SkeletonPanel />
			<SkeletonPanel variant="compact" hasMetric={true} />
		</div>
		
		<div class="panels-grid" id="analytics-content" style="display: none;">
			<AnalyticsLoader client:load />
		</div>
	</div>
</Main>

<script>
	// Handle the transition from skeleton to loaded content
	document.addEventListener('DOMContentLoaded', () => {
		const skeletonContainer = document.getElementById('analytics-skeleton');
		const contentContainer = document.getElementById('analytics-content');
		
		// Hide skeleton and show content after a delay (simulating loading)
		setTimeout(() => {
			if (skeletonContainer && contentContainer) {
				skeletonContainer.style.display = 'none';
				contentContainer.style.display = 'block';
				contentContainer.style.animation = 'fadeIn 0.5s ease-in';
			}
		}, 1500); // 1.5 seconds to show loading state
	});
</script>

<style lang="scss">
	@keyframes fadeIn {
		from { 
			opacity: 0; 
			transform: translateY(20px); 
		}
		to { 
			opacity: 1; 
			transform: translateY(0); 
		}
	}

	.dashboard-content {
		.panels-grid {
			// CSS Masonry Layout using columns
			columns: 3;
			column-gap: 1.5rem;
			column-fill: balance;

			// Responsive columns
			@media (max-width: 1200px) {
				columns: 2;
				column-gap: 1.25rem;
			}

			@media (max-width: 768px) {
				columns: 1;
				column-gap: 1rem;
			}

			// Ensure panels don't break across columns
			:global(.panel) {
				break-inside: avoid;
				margin-bottom: 1.5rem;
				background: var(--bg-primary);
				border: 1px solid var(--border-color);
				border-radius: 12px;
				padding: 1.5rem;
				transition: all 0.2s ease;

				&:hover {
					transform: translateY(-2px);
					box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
				}

				&.featured {
					background: linear-gradient(135deg, var(--accent-primary) 0%, var(--accent-secondary) 100%);
					color: white;
					border: none;
				}

				&.compact {
					padding: 1rem;
				}

				@media (max-width: 1200px) {
					margin-bottom: 1.25rem;
				}

				@media (max-width: 768px) {
					margin-bottom: 1rem;
				}
			}

			:global(.panel-header) {
				display: flex;
				align-items: flex-start;
				gap: 1rem;
				margin-bottom: 1rem;

				.panel-icon {
					width: 24px;
					height: 24px;
					font-size: 1.25rem;
					display: flex;
					align-items: center;
					justify-content: center;
				}

				.panel-content h3 {
					margin: 0 0 0.25rem 0;
					font-size: 1.125rem;
					font-weight: 600;
					color: var(--text-primary);
				}

				.panel-content p {
					margin: 0;
					font-size: 0.875rem;
					color: var(--text-muted);
				}
			}

			:global(.panel-body) {
				h4 {
					color: var(--text-primary);
					margin: 1rem 0 0.5rem 0;
					font-size: 1rem;
					font-weight: 600;
				}

				ul {
					list-style: none;
					padding: 0;
					margin: 0.5rem 0;

					li {
						padding: 0.5rem 0;
						border-bottom: 1px solid var(--bg-secondary);
						color: var(--text-secondary);

						&:last-child {
							border-bottom: none;
						}
					}
				}

				p {
					color: var(--text-secondary);
					line-height: 1.6;
					margin: 0.5rem 0;
				}
			}
		}

		.metric {
			font-size: 2.5rem;
			font-weight: bold;
			color: var(--accent-primary);
			margin: 0.5rem 0;
		}

		.badge {
			display: inline-block;
			background: var(--accent-primary);
			color: var(--bg-primary);
			padding: 0.25rem 0.75rem;
			border-radius: 1rem;
			font-size: 0.875rem;
			font-weight: 500;
			margin: 0.25rem 0.5rem 0.25rem 0;
		}

		.progress-bar {
			width: 100%;
			height: 8px;
			background: var(--bg-secondary);
			border-radius: 4px;
			overflow: hidden;
			margin-top: 1rem;

			.progress-fill {
				height: 100%;
				background: var(--accent-primary);
				transition: width 0.3s ease;
			}
		}

		.db-test-status {
			text-align: center;
			
			.status-indicator {
				font-size: 2rem;
				margin-bottom: 0.5rem;
			}
			
			.db-stats {
				margin-top: 1rem;
				padding: 0.75rem;
				background: var(--bg-secondary);
				border-radius: 0.5rem;
				font-size: 0.875rem;
				
				div {
					margin: 0.25rem 0;
					color: var(--text-secondary);
				}
			}
		}
	}
</style>